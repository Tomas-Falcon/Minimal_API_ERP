@page "/products"
@inject Services.ProductService ProductService
@using Dtos

<h3>Product List</h3>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Sale Price</th>
                <th>Category</th>
                <th>Description</th>
                <th>Product GUID</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Title</td>
                    <td>@product.Price</td>
                    <td>@product.SalePrice</td>
                    <td>@product.CategoryIdGuid</td>
                    <td>@product.Description</td>
                    <td>@product.ProductIdGuid</td>
                    <td><button @onclick="() => AddToCart(product)">Add to Cart</button></td>
                </tr>
            }
        </tbody>
    </table>

    <button @onclick="PreviousPage" disabled="@isFirstPage">Previous</button>
    <button @onclick="NextPage" disabled="@isLastPage">Next</button>
}

@code {
    private IList<ProductDtoView>? products;
    private int currentPage = 0;
    private const int pageSize = 10;
    private bool isFirstPage => currentPage == 0;
    private bool isLastPage => products == null || products.Count < pageSize;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        products = await ProductService.GetProductsPagedAsync(currentPage, pageSize);
    }

    private async Task PreviousPage()
    {
        if (currentPage > 0)
        {
            currentPage--;
            await LoadProducts();
        }
    }

    private async Task NextPage()
    {
        if (products != null && products.Count == pageSize)
        {
            currentPage++;
            await LoadProducts();
        }
    }

    private void AddToCart(ProductDtoView product)
    {
       
    }
}
